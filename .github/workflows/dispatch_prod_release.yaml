name: "[Dispatch] Prod Release"

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'enter version(x.y.z)'
        required: true
        default: '1.0.0'
      container_arch:
        type: choice
        description: 'choose container architecture'
        default: linux/amd64,linux/arm64
        options:
          - "linux/amd64"
          - "linux/arm64"
          - "linux/amd64,linux/arm64"

env:
  VERSION: ${{ github.event.inputs.version }}
  ARCH: ${{ github.event.inputs.container_arch }}

jobs:
  condition_check:
    runs-on: ubuntu-latest
    steps:
      - name: Check version format
        run: |
          if [[ !(${{ env.VERSION }} =~ ^[0-9]\.[0-9]?[0-9]\.[0-9]?[0-9]$) ]];
          then
            echo "You entered an incorrect version format."
            exit 1
          fi
          
      - name: Debugging
        run: |
          echo "major=$(echo ${{env.VERSION}} | cut -d'.' -f1)"
          echo "minor=$(echo ${{env.VERSION}} | cut -d'.' -f2)"
          echo "patch=$(echo ${{env.VERSION}} | cut -d'.' -f3)"
          
  update_master_branch_version_file:
    needs: condition_check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.USER_TOKEN }}
          
      - name: Update version file
        run: |
          echo ${{ env.VERSION }} > src/VERSION
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "[CI/CD] release version ${{ env.VERSION }}"
          
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.USER_TOKEN }}
          branch: master

  tagging:
    needs: update_master_branch_version_file
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.USER_TOKEN }}
      - name: Git tagging
        run: |
          git tag ${{ env.VERSION }}
          git push origin "${{ env.VERSION }}"
          
  docker:
    needs: tagging
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.USER_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push (Prod Private ECR)
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: ${{ env.ARCH }}
          push: true
          tags: ${{ secrets.PROD_ECR_REPO }}:${{ env.VERSION }}
