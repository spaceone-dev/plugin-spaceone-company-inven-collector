name: "[Dispatch] Dev Release"

on:
  workflow_dispatch:

env:
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

jobs:
  versioning:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.versioning.outputs.VERSION }}
    steps:
      - uses: actions/checkout@v2
      - name: get current date
        run: |
          sudo ln -sf /usr/share/zoneinfo/Asia/Seoul /etc/localtime
          echo "TIME=$(date +'%Y%m%d.%H%M%S')" >> $GITHUB_ENV
      - name: set version with current date
        id: versioning
        run: |
          echo "VERSION=$(cat src/VERSION | cut -c 2-).${{ env.TIME }}" >> $GITHUB_OUTPUT
      - name: Notice when job fails
        if: failure()
        uses: 8398a7/action-slack@v3.2.0
        with:
          status: ${{job.status}}
          fields: repo,workflow,job
          author_name: Github Action Slack

  docker:
    runs-on: ubuntu-latest
    needs: versioning
    env:
      VERSION: ${{ needs.versioning.outputs.version }}
    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push (Dev Private ECR)
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.ECR_REPO }}:${{ env.VERSION }}


  scan:
    if:  ${{ secrets.SLACK_WEBHOOK_URL != '' }}
    needs: [versioning, docker]
    runs-on: ubuntu-20.04
    env:
      VERSION: ${{ needs.versioning.outputs.version }}
    steps:
      - name: Run Trivy vulnerability scanner
        id: trivy-scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: pyengine/${{ github.event.repository.name }}:${{ env.VERSION }}
          format: 'sarif'
          output: 'trivy-results.sarif'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Count vulnerabilities
        id: vulnerabilities
        run: |
          count=$(jq '.runs[].results[].ruleId' ./trivy-results.sarif | wc -c)
          echo "result_count=$count" >> $GITHUB_OUTPUT
          echo "$count"

      - name: slack
        if:  ${{ steps.vulnerabilities.outputs.result_count != 0 }}
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          fields: workflowRun
          custom_payload: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": ":warning: Image vulnerability detected"
                  }
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Image:*\npyengine/${{ github.event.repository.name }}:${{ env.VERSION }}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Repo name:*\n${{ github.repository }}"
                    }
                  ]
                },
                {
                  "type": "actions",
                  "elements": [
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "emoji": true,
                        "text": "View Detail"
                      },
                      "style": "danger",
                      "url": "https://github.com/${{ github.repository }}/security/code-scanning"
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{secrets.VULNERABILITY_SLACK_WEBHOOK_URL}}

  notification:
    runs-on: ubuntu-latest
    needs: docker
    steps:
      - name: Slack
        if: always()
        uses: 8398a7/action-slack@v3.2.0
        with:
          status: ${{job.status}}
          fields: repo,message,commit,author,action,ref,workflow,job
          author_name: Github Action Slack
